rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read/write their own data, and read public profiles
    match /users/{userId} {
      allow read: if request.auth != null; // Allow any authenticated user to read profiles
      allow write: if request.auth.uid == userId;
    }

    // Chats: Can read/write if they are a member
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.members;

      // Messages: Can read/write if they are a member of the parent chat
      match /messages/{messageId} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
      }
    }

    // Friend Requests: Can create, and can update/delete if they are the recipient
    match /friendRequests/{requestId} {
        allow read: if request.auth.uid == resource.data.from.id || request.auth.uid == resource.data.to;
        allow create: if request.auth.uid == request.resource.data.from.id;
        allow update: if request.auth.uid == resource.data.to; // recipient can accept/decline
        allow delete: if false; // Don't allow deletion, just update status
    }

    // Servers: Can read if they are a member, create, and manage if they are the owner
    match /servers/{serverId} {
        allow read: if request.auth.uid in resource.data.members;
        allow create: if request.auth.uid == request.resource.data.ownerId;
        allow update: if request.auth.uid == resource.data.ownerId;
        allow delete: if request.auth.uid == resource.data.ownerId;

        // Channels: Can read if they are a member of the server, owner can manage
        match /channels/{channelId} {
            allow read: if get(/databases/$(database)/documents/servers/$(serverId)).data.members.hasAny([request.auth.uid]);
            allow create, update, delete: if request.auth.uid == get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId;
        }
    }
  }
}
