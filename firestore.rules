
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can be read by anyone (for profile lookups), but only the user themselves can create or update their own document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;

      // This allows the initial username uniqueness check during signup.
      allow list: if request.auth == null || request.auth != null;
    }

    // A user can only create a friend request where they are the sender.
    // The request can be read by both sender and receiver.
    // Only the receiver can update (accept/decline) or delete the request.
    match /friendRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.to || request.auth.uid == resource.data.from.id;
      allow create: if request.auth.uid == request.resource.data.from.id;
      allow update, delete: if request.auth.uid == resource.data.to;
    }

    // A user can read, write, and update chats they are a member of.
    match /chats/{chatId} {
      allow read, update, delete: if request.auth.uid in resource.data.members;
      allow create: if request.auth.uid in request.resource.data.members;

      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        allow update, delete: if request.auth.uid == resource.data.sender;
      }
    }

    // A user can read a server's details if they are a member.
    // The owner has full rights.
    match /servers/{serverId} {
      allow read: if request.auth.uid in resource.data.members;
      allow update: if request.auth.uid == resource.data.ownerId;
      allow delete: if request.auth.uid == resource.data.ownerId;
      allow create: if request.auth.uid == request.resource.data.ownerId;

      // Channels can be managed by the server owner.
      // Members can read channels.
      match /channels/{channelId} {
         allow read: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
         allow create, update, delete: if request.auth.uid == get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId;

        // Messages can be posted by server members.
        // Users can only edit/delete their own messages.
        match /messages/{messageId} {
          allow read, create: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
          allow update, delete: if request.auth.uid == resource.data.sender;
        }
      }
    }
  }
}
