rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isAuth();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
    }
    
    match /friendRequests/{requestId} {
      allow read: if isAuth() && (request.auth.uid == resource.data.to || request.auth.uid == resource.data.from.id);
      allow create: if isAuth() && request.auth.uid == request.resource.data.from.id;
      allow update: if isAuth() && request.auth.uid == resource.data.to;
    }

    match /chats/{chatId} {
      allow read, delete: if isAuth() && request.auth.uid in resource.data.members;
      allow create: if isAuth() && request.auth.uid in request.resource.data.members;
      match /messages/{messageId} {
        allow read, create, update, delete: if isAuth() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
      }
    }

    match /servers/{serverId} {
      allow read: if isAuth();
      allow create: if isAuth() && request.auth.uid == request.resource.data.ownerId;
      // Allow owner to update everything.
      // Allow any authenticated user to update a server ONLY to add themselves to the members list.
      allow update: if (isAuth() && request.auth.uid == resource.data.ownerId) || 
                    (isAuth() && request.resource.data.members == resource.data.members.concat([request.auth.uid]));
      allow delete: if isAuth() && request.auth.uid == resource.data.ownerId;

      match /channels/{channelId} {
        allow read: if isAuth();
        allow create, update, delete: if isAuth() && request.auth.uid == get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId;

        match /messages/{messageId} {
          allow read, create, update, delete: if isAuth() && request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
        }
      }
    }
  }
}
