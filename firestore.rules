rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    // --- USER PROFILES ---
    // Users can create their own profile document.
    // Any logged-in user can read profiles (needed for member lists, etc.).
    // Users can only update their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }
    
    // --- FRIEND REQUESTS ---
    // Logged-in users can create friend requests.
    // Users can read/update requests sent to them.
    match /friendRequests/{requestId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.to;
    }

    // --- DIRECT MESSAGES (CHATS) ---
    // Users can interact with chats they are a member of.
    match /chats/{chatId} {
      allow read, update, delete: if request.auth.uid in resource.data.members;

      // Messages within a chat
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        allow update, delete: if request.auth.uid == resource.data.sender;
      }
    }

    // --- SERVERS & CHANNELS ---
    match /servers/{serverId} {
      // Any authenticated user can read server and channel info.
      // This is necessary for the discovery and join pages to function.
      allow read: if request.auth != null;
      
      // Users can create servers if they are the owner in the request data.
      allow create: if request.auth.uid == request.resource.data.ownerId;

      // An authenticated user can update a server if:
      // 1. They are the owner.
      // 2. They are adding THEMSELVES to the members list (joining).
      allow update: if request.auth.uid == resource.data.ownerId || 
                      (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) &&
                       request.resource.data.members.size() == resource.data.members.size() + 1 &&
                       request.auth.uid in request.resource.data.members);
      
      // Only the owner can delete a server.
      allow delete: if request.auth.uid == resource.data.ownerId;

      // --- Channels within a server ---
      match /channels/{channelId} {
        // Allow logged-in users to read channels to see server details before joining.
        allow list, read: if request.auth != null;
        
        // Only server members can manage channels (UI should restrict to owner).
        allow create, update, delete: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;

        // --- Messages within a channel ---
        match /messages/{messageId} {
          // Members of the server can read and create messages.
          allow read, create: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
          // Only the author of a message can update or delete it.
          allow update, delete: if request.auth.uid == resource.data.sender;
        }
      }
    }
  }
}
