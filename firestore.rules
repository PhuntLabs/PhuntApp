rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check server membership
    function isServerMember(serverId) {
      return request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
    }

    // Users collection
    match /users/{userId} {
      allow read;
      allow create;
      allow update: if request.auth.uid == userId;
    }

    // Chats (Direct Messages)
    match /chats/{chatId} {
      allow read, delete: if request.auth.uid in resource.data.members;

      // Messages subcollection
      match /messages/{messageId} {
        allow read: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        allow create: if request.auth.uid == request.resource.data.sender && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        allow update, delete: if request.auth.uid == resource.data.sender;
      }
    }

    // Friend Requests
    match /friendRequests/{requestId} {
      allow read, update: if request.auth.uid == resource.data.to;
      allow create: if request.auth.uid == request.resource.data.from.id;
    }
    
    // Servers
    match /servers/{serverId} {
        // Any authenticated user can read server details. Fixes join page loading.
        allow read: if request.auth != null;
        
        // Owners can update anything. Users can add themselves to the members list (join).
        allow update: if request.auth.uid == resource.data.ownerId || 
                       (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) && 
                        request.resource.data.members == resource.data.members.concat([request.auth.uid]));
                        
        allow delete: if request.auth.uid == resource.data.ownerId;

        // Channels subcollection
        match /channels/{channelId} {
            allow read: if isServerMember(serverId);
            allow create, update, delete: if request.auth.uid == get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId;

            // Messages sub-subcollection
            match /messages/{messageId} {
                allow read: if isServerMember(serverId);
                allow create: if request.auth.uid == request.resource.data.sender && isServerMember(serverId);
                allow update, delete: if request.auth.uid == resource.data.sender;
            }
        }
    }
  }
}
