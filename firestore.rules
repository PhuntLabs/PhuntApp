rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Deny all reads and writes by default.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // USERS
    // Users can read and write their own user document.
    // Any authenticated user can read other users' public profiles.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // CHATS
    // Allow read/write if the user is a member of the chat.
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.members;
    }

    // MESSAGES
    // Allow read/write to messages if user is a member of the parent chat.
    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if get(/databases/$(database)/documents/chats/$(chatId)).data.members[? request.auth.uid] != [];
    }

    // FRIEND REQUESTS
    // Allow user to create a request.
    // Allow user to update a request if they are the recipient.
    match /friendRequests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.from.id;
      allow read, update: if request.auth.uid == resource.data.to;
    }

    // SERVERS
    // Allow create if user is the owner.
    // Allow read if user is a member.
    // Allow update, delete if user is the owner.
    match /servers/{serverId} {
      allow create: if request.auth.uid == request.resource.data.ownerId && request.auth.uid in request.resource.data.members;
      allow read: if request.auth.uid in resource.data.members;
      allow update, delete: if request.auth.uid == resource.data.ownerId;
    }

    // CHANNELS
    // Allow read if user is member of parent server.
    // Allow create/write/delete if user is owner of parent server.
    match /servers/{serverId}/channels/{channelId} {
        allow read: if get(/databases/$(database)/documents/servers/$(serverId)).data.members[? request.auth.uid] != [];
        allow write, delete: if get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId == request.auth.uid;
    }
  }
}
