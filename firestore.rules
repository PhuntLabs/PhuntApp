rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can be read by anyone, but only the user can write to their own doc.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Friend Requests can be created by anyone, but only updated/deleted by the recipient.
    match /friendRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.to || request.auth.uid == resource.data.from.id;
      allow create: if request.auth.uid == request.resource.data.from.id;
      allow update, delete: if request.auth.uid == resource.data.to;
    }
    
    // Chats can be read/written by members of the chat.
    match /chats/{chatId} {
      allow read, delete: if request.auth.uid in resource.data.members;
      allow create: if request.auth.uid in request.resource.data.members;
      allow update: if request.auth.uid in resource.data.members;
      
      // Messages can be read by chat members.
      // Users can only create/edit/delete their own messages.
      match /messages/{messageId} {
        allow read: if get(/databases/$(database)/documents/chats/$(chatId)).data.members.hasAny([request.auth.uid]);
        allow create: if request.auth.uid == request.resource.data.sender
                      && get(/databases/$(database)/documents/chats/$(chatId)).data.members.hasAny([request.auth.uid]);
        allow update, delete: if request.auth.uid == resource.data.sender;
      }
    }

    // Server rules
    match /servers/{serverId} {
        // Allow user to create a server if they are the owner
        allow create: if request.auth.uid == request.resource.data.ownerId;
        
        // Allow members to read the server
        allow read: if request.auth.uid in resource.data.members;

        // Allow owner to update or delete the server
        allow update, delete: if request.auth.uid == resource.data.ownerId;

        // Channel rules
        match /channels/{channelId} {
            // Allow server members to read channels
            allow read: if get(/databases/$(database)/documents/servers/$(serverId)).data.members.hasAny([request.auth.uid]);

            // Only the server owner can create, update, or delete channels
            allow create, update, delete: if get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId == request.auth.uid;
        }
    }
  }
}