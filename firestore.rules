
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users
    // - Anyone can query the user list to find friends.
    // - A user can only create their own profile.
    // - Any logged-in user can read any profile.
    // - A user can only update or delete their own profile.
    match /users/{userId} {
      allow list, read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId;
    }

    // Friend Requests
    // - A user can only create a request FROM themself.
    // - The sender or receiver can read the request.
    // - Only the receiver can update (accept/decline) or delete the request.
    match /friendRequests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.from.id;
      allow read: if request.auth.uid == resource.data.to || request.auth.uid == resource.data.from.id;
      allow update, delete: if request.auth.uid == resource.data.to;
    }

    // Chats
    // - A user can only access a chat if they are a member.
    // - This includes read, write, create, and delete operations.
    match /chats/{chatId} {
      allow read, write, create, delete: if request.auth.uid in resource.data.members;

      // Messages within chats
      // - A member of the chat can read and create messages.
      // - A user can only edit or delete their own messages.
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        allow update, delete: if request.auth.uid == resource.data.sender;
      }
    }
    
    // Servers
    // - Any logged-in user can create a server.
    // - Members can read server details. Public servers can be read by any logged-in user.
    // - Only the owner can update or delete the server.
    // - Any logged-in user can join a server (update the members list).
    match /servers/{serverId} {
      allow create: if request.auth != null;
      allow read: if resource.data.isPublic == true || request.auth.uid in resource.data.members;
      allow update: if request.auth.uid == resource.data.ownerId || (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) && request.auth != null);
      allow delete: if request.auth.uid == resource.data.ownerId;
      
      // Channels within servers
      // - Only server owner can create, update, delete channels.
      // - All members can read channels.
      match /channels/{channelId} {
        allow read: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
        allow create, update, delete: if request.auth.uid == get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId;

        // Messages within channels
        // - A member of the server can read and create messages.
        // - A user can only edit or delete their own messages.
        match /messages/{messageId} {
          allow read, create: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
          allow update, delete: if request.auth.uid == resource.data.sender;
        }
      }
    }
  }
}
