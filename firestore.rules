rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS
    // - Allow anyone to create their own user document during signup.
    // - Allow any authenticated user to read user profiles (needed for search, mentions, etc.).
    // - Allow users to only update their own profile.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == userId;
    }

    // FRIEND REQUESTS
    // - Allow authenticated users to create friend requests.
    // - Allow users to update a request if they are the recipient ('to').
    // - Allow users to read a request if they are a member of it.
    match /friendRequests/{requestId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.members;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.to;
    }

    // CHATS & MESSAGES
    // - Users can only read/write to chats they are members of.
    function isChatMember(chatId) {
      return request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.members.hasAny([request.auth.uid]);
    }
    
    match /chats/{chatId} {
        allow read, write: if isChatMember(chatId);

        // MESSAGES
        // - Allow users to create messages in chats they are a member of.
        // - Allow users to only edit or delete their own messages.
        match /messages/{messageId} {
            allow create: if isChatMember(chatId);
            allow read: if isChatMember(chatId);
            allow update, delete: if isChatMember(chatId) && resource.data.sender == request.auth.uid;
        }
    }
    
    // SERVERS
    // - A user must be authenticated to interact with servers.
    // - Only members of a server can read its data.
    // - Only the owner can delete the server.
    // - Only members can update the server (e.g., join).
    function isServerMember() {
      return request.auth != null && resource.data.members.hasAny([request.auth.uid]);
    }

    function isServerOwner() {
        return request.auth != null && resource.data.ownerId == request.auth.uid;
    }

    match /servers/{serverId} {
        allow read: if isServerMember();
        allow create: if request.auth != null;
        allow update: if isServerMember();
        allow delete: if isServerOwner();

        // CHANNELS & MESSAGES
        // - Anyone in the server can read channels and messages.
        // - Only the server owner can create, update, or delete channels.
        match /channels/{channelId} {
            allow read: if isServerMember();
            allow create, update, delete: if isServerOwner();
            
            match /messages/{messageId} {
                allow read: if isServerMember();
                allow create: if isServerMember();
                allow update, delete: if isServerMember() && resource.data.sender == request.auth.uid;
            }
        }
    }
  }
}
