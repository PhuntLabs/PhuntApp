rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // USERS
    // CREATE: Logged-in user can create a user document with their own UID.
    // READ: Any logged-in user can read any user's profile.
    // UPDATE: User can only update their own profile.
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId;
    }

    // CHATS & MESSAGES
    // READ/WRITE: User can read/write to a chat if they are a member.
    match /chats/{chatId} {
      allow read, delete: if request.auth.uid in resource.data.members;

      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        allow update, delete: if request.auth.uid == resource.data.sender;
      }
    }

    // FRIEND REQUESTS
    // CREATE: Any logged-in user can create a friend request.
    // UPDATE: User can update a request if they are the recipient.
    match /friendRequests/{requestId} {
        allow create: if request.auth.uid == request.resource.data.from.id;
        allow read, update: if request.auth.uid == resource.data.to || request.auth.uid == resource.data.from.id;
    }

    // SERVERS
    // READ: Any logged-in user can read server info.
    // UPDATE: User can join a server (add their uid to members)
    //         or an owner can update server details.
    match /servers/{serverId} {
      allow read: if request.auth != null;
      allow update: if request.auth.uid in resource.data.members || 
                       (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) &&
                        request.resource.data.members.size() == resource.data.members.size() + 1 &&
                        request.auth.uid in request.resource.data.members);
      
      // CHANNELS
      // READ: Any logged-in user can read channel info.
      // CREATE/DELETE/UPDATE: Only server owners can modify channels.
      match /channels/{channelId} {
        allow read: if request.auth != null;
        allow create, update, delete: if get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId == request.auth.uid;

        // CHANNEL MESSAGES
        // READ/CREATE: User can read/create messages if they are a server member.
        // UPDATE/DELETE: User can only modify their own messages.
        match /messages/{messageId} {
          allow read: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
          allow create: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members && request.auth.uid == request.resource.data.sender;
          allow update, delete: if request.auth.uid == resource.data.sender;
        }
      }
    }
  }
}
