rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check server membership
    function isServerMember(serverId) {
      return request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
    }

    match /users/{userId} {
      // Users can read their own profile and other's public profiles
      allow read: if request.auth != null;
      // Users can only create and update their own profile
      allow create, update: if request.auth.uid == userId;
    }

    match /servers/{serverId} {
      // ANY authenticated user can read server data (needed for discovery/join page)
      allow read: if request.auth != null;

      // Allow creating servers
      allow create: if request.auth.uid != null;

      // Allow joining a server (adding self to members)
      // Allow owner to update any other fields
      allow update: if (request.auth.uid == resource.data.ownerId) ||
                       (request.auth.uid in request.resource.data.members && !(request.auth.uid in resource.data.members));

      // Only owner can delete a server
      allow delete: if request.auth.uid == resource.data.ownerId;

      match /channels/{channelId} {
        // Members of the server can read channels
        allow read: if isServerMember(serverId);
        // Owner can create, update, delete channels
        allow write: if get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId == request.auth.uid;

        match /messages/{messageId} {
           // Members of the server can read messages
           allow read: if isServerMember(serverId);
           // Members of the server can create messages
           allow create: if isServerMember(serverId);
           // Users can only edit/delete their own messages
           allow update, delete: if request.auth.uid == resource.data.sender;
        }
      }
    }

    match /chats/{chatId} {
      // Users can only access chats they are members of
      allow read, delete: if request.auth.uid in resource.data.members;
      // Anyone can create a chat (will be secured by adding members)
      allow create: if request.auth.uid != null;

      match /messages/{messageId} {
        // Members of the chat can read messages
        allow read: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        // Members of the chat can create messages
        allow create: if request.auth.uid == request.resource.data.sender;
         // Users can only edit/delete their own messages
        allow update, delete: if request.auth.uid == resource.data.sender;
      }
    }

    match /friendRequests/{requestId} {
        // Users can read requests sent to them
        allow read: if request.auth.uid == resource.data.to;
        // Authenticated users can create requests
        allow create: if request.auth.uid != null;
        // Users can update requests sent to them (to accept/decline)
        allow update: if request.auth.uid == resource.data.to;
    }
  }
}
