rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // Users can only create friend requests from their own account.
    // Both the sender and receiver can read the request.
    // Only the receiver can update the status (accept/decline).
    match /friendRequests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.from.id;
      allow read: if request.auth.uid == resource.data.to || request.auth.uid == resource.data.from.id;
      allow update: if request.auth.uid == resource.data.to;
    }
    
    // A user can interact with a chat if they are a member of it.
    // This allows them to read messages, send messages (create chat document if it doesn't exist),
    // and leave chats.
    match /chats/{chatId} {
      allow read, update, delete: if request.auth.uid in resource.data.members;
      allow create: if request.auth.uid in request.resource.data.members;
    }

    // Chat messages can be read/written by members of the parent chat.
    match /chats/{chatId}/messages/{messageId} {
       allow read, create, update, delete: if get(/databases/$(database)/documents/chats/$(chatId)).data.members.hasAny([request.auth.uid]);
    }

    // Servers can be read by anyone if public, but only by members if private.
    // Only the owner can delete a server.
    match /servers/{serverId} {
      allow read: if resource.data.isPublic == true || request.auth.uid in resource.data.members;
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow update: if request.auth.uid in resource.data.members;
      allow delete: if request.auth.uid == resource.data.ownerId;
    }

    // Channels and their messages can be accessed by members of the parent server.
    match /servers/{serverId}/channels/{channelId} {
      allow read, create, update, delete: if get(/databases/$(database)/documents/servers/$(serverId)).data.members.hasAny([request.auth.uid]);
    }

    match /servers/{serverId}/channels/{channelId}/messages/{messageId} {
      allow read, create, update, delete: if get(/databases/$(database)/documents/servers/$(serverId)).data.members.hasAny([request.auth.uid]);
    }
  }
}
