rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    // Collection: users
    match /users/{userId} {
      allow read: if isAuth();
      allow create: if isUser(userId) && request.resource.data.uid == userId;
      allow update: if isUser(userId);
    }
    
    // Collection: friendRequests
    match /friendRequests/{requestId} {
      allow create: if isAuth() && request.auth.uid == request.resource.data.from.id;
      allow read, update: if isAuth() && request.auth.uid == resource.data.to;
    }
    
    // Collection: chats
    match /chats/{chatId} {
      allow read, create, update, delete: if isAuth() && request.auth.uid in resource.data.members;
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read, create: if isAuth() && get(/databases/$(database)/documents/chats/$(chatId)).data.members.hasAny([request.auth.uid]);
        allow update, delete: if isAuth() && get(/databases/$(database)/documents/chats/$(chatId)).data.members.hasAny([request.auth.uid]) && resource.data.sender == request.auth.uid;
      }
    }

    // Collection: servers
    match /servers/{serverId} {
      // Anyone logged in can see servers for the discovery page
      allow read: if isAuth();
      // Only the owner can update or delete a server
      allow update, delete: if isAuth() && resource.data.ownerId == request.auth.uid;
      // Any logged in user can create a server
      allow create: if isAuth();

      // Channels subcollection
      match /channels/{channelId} {
        // Anyone logged in can read channel lists
        allow read: if isAuth();
        // Only members of the server can create/update/delete channels
        allow create, update, delete: if isAuth() && get(/databases/$(database)/documents/servers/$(serverId)).data.members.hasAny([request.auth.uid]);

        // Messages subcollection within a channel
        match /messages/{messageId} {
            // Only members of the server can read/create messages
            allow read, create: if isAuth() && get(/databases/$(database)/documents/servers/$(serverId)).data.members.hasAny([request.auth.uid]);
            // Only the original sender can update/delete their message
            allow update, delete: if isAuth() && resource.data.sender == request.auth.uid;
        }
      }
    }
  }
}
