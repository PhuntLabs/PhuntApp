rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.members;

      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
        allow update, delete: if request.auth.uid == resource.data.sender;
      }
    }

    match /friendRequests/{requestId} {
        allow read: if request.auth.uid == resource.data.to || request.auth.uid == resource.data.from.id;
        allow create: if request.auth.uid == request.resource.data.from.id;
        allow update: if request.auth.uid == resource.data.to;
    }

    match /servers/{serverId} {
        // Any authenticated user can see any server's details.
        // This is necessary for the discovery page and for the join page to load server info.
        allow read: if request.auth != null;

        // Allow creating servers. The user must be the owner.
        allow create: if request.auth.uid == request.resource.data.ownerId;
        
        // Allow updates under specific conditions:
        // 1. The server owner can update any field.
        // 2. Any authenticated user can join a server (add their own UID to the members array)
        allow update: if (request.auth.uid == resource.data.ownerId) ||
                       (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) &&
                        request.resource.data.members.size() == resource.data.members.size() + 1 &&
                        request.auth.uid in request.resource.data.members);
        
        allow delete: if request.auth.uid == resource.data.ownerId;

        match /channels/{channelId} {
            // Any authenticated user can read channel lists and details.
            allow list, read: if request.auth != null;
            
            // Only the server owner can create, update, or delete channels.
            allow write: if request.auth.uid == get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId;
            
            match /messages/{messageId} {
                // A user can create a message if they are a member of the server.
                allow create: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
                
                // A user can only update or delete their own messages.
                allow update, delete: if request.auth.uid == resource.data.sender;
            }
        }
    }
  }
}
