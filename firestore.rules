rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own profile
    match /users/{userId} {
      allow read;
      allow create, update: if request.auth.uid == userId;
    }

    // Friend Requests
    match /friendRequests/{requestId} {
      allow read, create: if request.auth.uid != null;
      allow update: if request.auth.uid == resource.data.to || request.auth.uid == resource.data.from.id;
    }

    // Chats
    match /chats/{chatId} {
      allow read, update, delete: if request.auth.uid in resource.data.members;

      // Messages within a chat
      match /messages/{messageId} {
        allow read, create: if get(/databases/$(database)/documents/chats/$(chatId)).data.members.hasAny([request.auth.uid]);
        allow update, delete: if request.auth.uid == resource.data.sender;
      }
    }
    
    // Servers
    match /servers/{serverId} {
        allow read: if resource.data.isPublic == true || request.auth.uid in resource.data.members;
        allow create: if request.auth.uid != null;
        // Allow owner to update everything. Allow anyone to join (add themselves to members array).
        allow update: if request.auth.uid == resource.data.ownerId || 
                      (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) && 
                       request.resource.data.members.size() == resource.data.members.size() + 1 &&
                       request.auth.uid in request.resource.data.members);
        allow delete: if request.auth.uid == resource.data.ownerId;

        // Channels within a server
        match /channels/{channelId} {
             // Members can read, owner can do everything
             allow read: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
             allow create, update, delete: if get(/databases/$(database)/documents/servers/$(serverId)).data.ownerId == request.auth.uid;
        
             // Messages within a channel
            match /messages/{messageId} {
                // Allow members to read and create messages.
                allow read, create: if request.auth.uid in get(/databases/$(database)/documents/servers/$(serverId)).data.members;
                // Allow message author to update or delete their own message.
                allow update, delete: if request.auth.uid == resource.data.sender;
            }
        }
    }
  }
}
